<?php


namespace App\Integrations\Casino;


/**
 * Interface CasinoCoreInterface
 * This is contract for all Casino Integrations To implement required methods.
 * As ErrorCodes this should always return GISErrorCodes
 */
interface CasinoCoreInterface
{


    /**
     * Authenticates User in Casino Core System and Returns details about user
     * e.g username, gender, balance and etc... all params are not mandatory
     * @param $token
     * @return array =
     *      [   mandatory params
     *          userId      =>  '',
     *          userName    =>  '',
     *          currency    =>  '', ISO3 Code
     *          ip          =>  '',
     *          balance     =>  ''//optional
     *      ]
     */
    public function auth($token);



    /**
     * Getting Balance Amount from Casino Core for certain user
     * @param $userId
     * @param $currencyId
     * @return mixed
     */
    public function getBalance($userId, $currencyId = null);



    /**
     * This Method is should call Casino Core Service and Casino Core, should decrease user balance
     * Reson for call, can be - Making Bet, Tipping Dealer
     * @param $userId
     * @param $withdrawAmount
     * @param $currency
     * @param $gameTransactionRef
     * @param null $gameTransactionUniqueRef
     * @param null $gameId
     * @param null $additional_data
     * @return mixed
     */
    public function withdraw($userId, $withdrawAmount, $currency, $gameTransactionRef, $gameTransactionUniqueRef = null, $userIP = null, $gameId = null, $additional_data = null);



    /**
     * This Method Should Call Casino Core Method To Deposit Money on User Balance
     * Reason can be - Return Winning, Return Bonus Amount
     * @param $userId
     * @param $depositAmount
     * @param $currency
     * @param $gameTransactionRef - This is Id Generated by Gave Vendor
     * @param null $gameTransactionUniqueRef -
     * @param null $gameId
     * @param null $additional_data
     * @return mixed
     */
    public function deposit($userId, $depositAmount, $currency, $gameTransactionRef, $gameTransactionUniqueRef = null, $userIP = null, $gameId = null, $additional_data = null);




    /**
     * @param $userId
     * @param $withdrawAmount
     * @param $depositAmount
     * @param $currency
     * @param $gameTransactionRef
     * @param null $gameTransactionUniqueRef
     * @param null $gameId
     * @param null $additional_data
     * @return mixed
     */
    public function withdrawAndDeposit($userId, $withdrawAmount, $depositAmount, $currency, $gameTransactionRef, $gameTransactionUniqueRef = null, $userIP = null, $gameId = null, $additional_data = null);



    /**
     * If for any reason Transaction was not successfull Game Provider calls Rollback Service, which then is called
     * in Casino Core to reverse transaction
     * @param $transactionId
     * @param int $isCasinoTransaction
     * @param null $statusNote
     * @param null $userId
     * @param null $gameId
     * @return mixed
     */
    public function rollback($transactionId, $isCasinoTransaction = 0, $statusNote = null,  $userId = null, $gameId = null);





    /**
     * This Method will get detailed information about user
     * Additional Data, which is not returned by auth method
     * @param $userId
     * @return array = [
     *       'userId'=>null,
     *       'firstName'=>null,
     *       'lastName'=>null,
     *       'userName'=>null,
     *       'currency'=>null,
     *       'currencyId'=>null,
     *       'email'=>null,
     *       'gender'=>null,
     *       'country'=>null,//ISO3 CODE
     *       'phone'=>null
     * ]
     **/
    public function getUserInfo($userId);







    /**
     * We need to implement check Transaction Status From Casino Core
     * @param $gameTransactionRef
     * @param null $gameTransactionUniqueRef
     * @return mixed
     */
    public function checkTransactionStatus($gameTransactionRef, $gameTransactionUniqueRef = null);



}


