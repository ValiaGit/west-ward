{
    "swagger": "2.0",
    "info": {
        "title": "Swagger 2.0 -  Games Integration System (Singular)",
        "description": "API Which Integrates Different Game Providers With Casino Core Systems",
        "contact": {
            "name": "Singular API Team"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:7778",
    "basePath": "",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json",
        "application/x-www-form-urlencoded"
    ],
    "paths": {
        "/launch": {
            "get": {
                "tags": [
                    "LaunchGames"
                ],
                "summary": "Integrated Point to generate Game Launch URLs",
                "description": "This Endpoint will be used to open any kind of games",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "provider",
                        "in": "query",
                        "description": "Provider name e.g Betsoft,Netent,Ezugi and etc...",
                        "required": true,
                        "type": "string",
                        "default": "Betsoft"
                    },
                    {
                        "name": "launchURL",
                        "in": "query",
                        "description": "This is Provider Specific Game Launch URL",
                        "required": true,
                        "type": "string",
                        "default": "http://google.com?token={token}&gameId={gameId}&lang={lang}"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Game language",
                        "required": true,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token Generated By Casino Core, this is mandatory when mode parameter is not fun",
                        "required": false,
                        "type": "string",
                        "default": "XXX-YYY-XXX"
                    },
                    {
                        "name": "gameId",
                        "in": "query",
                        "description": "Game Identifier",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tableId",
                        "in": "query",
                        "description": "Table Identifier",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "This can be fun or real, default is real",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exitURL",
                        "in": "query",
                        "description": "This feature is mainly for Mobile Implementations",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cashierURL",
                        "in": "query",
                        "description": "Set URL on cashier button inside opened game",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/affiliates/auth": {
            "post": {
                "tags": [
                    "Affiliates"
                ],
                "summary": "Authenticate User VIA token for Affiliates System",
                "description": "Affiliates System Gets Token and then validates that token here",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "default": "XXXX-ZZZZZ-YYYYY"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/affiliates/deposit": {
            "post": {
                "tags": [
                    "Affiliates"
                ],
                "summary": "Authenticate User VIA token for Affiliates System",
                "description": "Deposit Money on users balances",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Users list who should be awarded for affiliation activity",
                        "required": false,
                        "schema": {
                            "type": "json",
                            "items": {}
                        },
                        "default": "[\n    {\"user_id\":\"11\",\"amount\":\"55\"},\n    {\"user_id\":\"44\",\"amount\":\"120\"}\n]"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/bcsport/GetClientDetails": {
            "post": {
                "tags": [
                    "BetConstructSport"
                ],
                "summary": "This method is called when a player loads Sportsbook",
                "description": "This method is called when a player loads Sportsbook. Method receives AuthToken generated by OperatorBE server and returns players data in case player is logged in to the OperatorWebSite and token is valid. If user is not logged in, method should return ErrorCode 1008. In case of other problems (for example expired AuthToken or similar) other ErrorCodes should be used. ",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to authenticate user with token",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": "{'':''}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/bcsport/GetClientBalance": {
            "post": {
                "tags": [
                    "BetConstructSport"
                ],
                "summary": "This method is used to retrieve current User\u2019s (player\u2019s) balance in player\u2019s currency.",
                "description": "This method is used to retrieve current User\u2019s (player\u2019s) balance in player\u2019s currency.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to request UserBalance",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/bcsport/BetPlaced": {
            "post": {
                "tags": [
                    "BetConstructSport"
                ],
                "summary": "This method is called by BetConstructBE when User placed a bet",
                "description": "This method is called by BetConstructBE when User placed a bet. The bet is placed in pending status and the call is performed. OperatorBE should validate the placed bet and take money from the player\u2019s account. If there are not enough money, then OperatorBE should return insufficient funds error. In case of any error or communication failure, the placed bet is canceled and an error message displays to User. ",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to request Placing Bet",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/bcsport/BetResulted": {
            "post": {
                "tags": [
                    "BetConstructSport"
                ],
                "summary": "This method is called by BetConstructBE when an accepted bet is resulted ",
                "description": "This method is called by BetConstructBE when an accepted bet is resulted (bet status is changed). This call is used by OperatorBE to increase User\u2019s account balance by won amount. This can occur when: 1) user bet was rejected or returned and amount is returned to user account 2) user bet won 3) user bet lost and BetConstructBE notifies that bet lost (amount is 0 in this case) 4)\tuser bet is cashed-out (amount is calculated by BetConstructBE and usually it is less than the bet stake amount)  ",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to request Placing Bet",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/bcsport/Rollback": {
            "post": {
                "tags": [
                    "BetConstructSport"
                ],
                "summary": "This method is called by BetConstructBE when any transaction (placed bet, winning info, etc.) needs to be canceled.",
                "description": "This method is called by BetConstructBE when any transaction (placed bet, winning info, etc.) needs to be canceled.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to request Placing Bet",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/Authentication": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "BetConstruct sends request with TOKEN to get info about authenticated user",
                "description": "BetConstruct sends request with TOKEN to get info about authenticated user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payload to authenticate user with token",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/GetBalance": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to make withdraw and deposit at the same time from main balance",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/Withdraw": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to withdraw money from user balance",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/Deposit": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to deposit money/winning on user balance",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/WithdrawAndDeposit": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "This method is a combination of Withdrawal and Deposit methods. * It allows to reduce an amount of API calls as many as possible. * It returns an object of type WithdrawAndDepositOutput.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to make withdraw and deposit at the same time from main balance",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/Rollback": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "If a need to reimburse the player\u2019s already-placed bet has come up, then a try to roll back the withdrawal with using this method is applied until it succeeds. It returns an object of type RollbackOutput.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to rollback transaction in casino core system",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/api/betconstruct/RefreshToken": {
            "post": {
                "tags": [
                    "BetConstruct"
                ],
                "summary": "",
                "description": "If a need to reimburse the player\u2019s already-placed bet has come up, then a try to roll back the withdrawal with using this method is applied until it succeeds. It returns an object of type RollbackOutput.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Request to rollback transaction in casino core system",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/betsoft/auth": {
            "get": {
                "tags": [
                    "Betsoft"
                ],
                "summary": "Betsoft calls this URL to get user detail or permission of TOKEN",
                "description": "",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token Generated By Casino Core, then passed to betsoft and returned to validate.",
                        "required": true,
                        "type": "string",
                        "default": "508108a7c38935d8de2324f3d6544b19"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Hash to validate internal request initiated from BetSoft. md5(token+SECRET)",
                        "required": true,
                        "type": "string",
                        "default": "508108a7c38935d8de2324f3d6544b19"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/betsoft/getUserInfo": {
            "get": {
                "tags": [
                    "Betsoft"
                ],
                "summary": "Betsoft calls this URL to get user detail or permission of TOKEN",
                "description": "",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Unique ID of the user within Casino",
                        "required": true,
                        "type": "string",
                        "default": "1556234"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Hash to validate internal request initiated from BetSoft. md5(userId+SECRET)",
                        "required": true,
                        "type": "string",
                        "default": "508108a7c38935d8de2324f3d6544b19"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/betsoft/depositOrWithdraw": {
            "get": {
                "tags": [
                    "Betsoft"
                ],
                "summary": "Betsoft calls this URL to increase user balance and return user winning",
                "description": "",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Unique ID of the player within Casino Core",
                        "required": true,
                        "type": "string",
                        "default": "1556234"
                    },
                    {
                        "name": "bet",
                        "in": "query",
                        "description": "Amount of the bet (in cents) and the unique ID of the transaction on the BSG side in the format: bet_amount|transactionId",
                        "required": false,
                        "type": "string",
                        "default": "123|456"
                    },
                    {
                        "name": "win",
                        "in": "query",
                        "description": "Amount of the win (in cents) and the unique ID of the transaction on the BSG side in the format: win_amount|transactionId",
                        "required": false,
                        "type": "string",
                        "default": "789|101112"
                    },
                    {
                        "name": "roundId",
                        "in": "query",
                        "description": "Unique ID of the game round onthe BSG side. The game round can have several Bet/Result requests.",
                        "required": true,
                        "type": "integer",
                        "default": "654"
                    },
                    {
                        "name": "gameId",
                        "in": "query",
                        "description": "Unique ID of the game.",
                        "required": true,
                        "type": "integer",
                        "default": "5566"
                    },
                    {
                        "name": "isRoundFinished",
                        "in": "query",
                        "description": "Optional. Informs the EC system if the current round is finished.",
                        "required": false,
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Order: userId, bet, win, isRoundFinished, roundId, gameId",
                        "required": false,
                        "type": "string",
                        "default": "XXXX-YYYY-ZZZZ"
                    },
                    {
                        "name": "gameSessionId",
                        "in": "query",
                        "description": "Unique ID of the game session on BSG side.",
                        "required": true,
                        "type": "string",
                        "default": "KKKK-JJJJ-LLLL"
                    },
                    {
                        "name": "negativeBet",
                        "in": "query",
                        "description": "Optional. Can be sent only with a win operation. Specifies the amount in cents to return to the player's balance as result of a partially canceled bet (can occur in Craps and Ride\u2019m Poker games). Note: negativeBet is not part of the win amount and must be processed separately.",
                        "required": false,
                        "type": "integer",
                        "default": "-199"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/Ezugi/auth": {
            "post": {
                "tags": [
                    "Ezugi"
                ],
                "summary": "This is entry point for authenticating users in Ezugi Slots",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/Ezugi/debit": {
            "post": {
                "tags": [
                    "Ezugi"
                ],
                "summary": "This is entry point for authenticating users in Ezugi Slots",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/Ezugi/rollback": {
            "post": {
                "tags": [
                    "Ezugi"
                ],
                "summary": "This is entry point for authenticating users in Ezugi Slots",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/Ezugi/credit": {
            "post": {
                "tags": [
                    "Ezugi"
                ],
                "summary": "This is entry point for authenticating users in Ezugi Slots",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/habanero/handle": {
            "post": {
                "tags": [
                    "Habanero"
                ],
                "summary": "This is entry point for all Habanero Requests",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/playson/handle": {
            "post": {
                "tags": [
                    "Playson"
                ],
                "summary": "This is entry point for all Playson Requests",
                "description": "",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "type": "xml",
                            "items": {}
                        },
                        "default": "\n    <server session='09f5906793dd959571c0285ff63af2df' time='2014-01-01T00:00:00Z'>\n    <enter id='101' guid='R0TCR6LSHCMJDMJQ' key='testkey123'>\n    <game name='alice_c' />\n    </enter>\n    </server>"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/successModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errorModel": {
            "required": [
                "code",
                "error_code",
                "error_message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "error_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "successModel": {
            "required": [
                "code",
                "message",
                "data"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        }
    }
}